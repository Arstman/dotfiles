#!/bin/sh
summary="Youtube-dl"

get_path() {
    def=${1:-'/home/rg/Downloads'}

    path=$(echo '' | dmenu -it $def -p "Download path:")
    # Path is an empty string - either we escaped the dmenu prompt, in which
    # case the script should terminate early, or we entered an empty string,
    # which should not be a valid download location
    [ -z $path ] && return 1

    mkdir -p $path
    echo $path
}

[ $# -ne 1 ] && echo "Usage: ytdlmenu URL" && exit

if [ $(echo $1 | awk '/^https?:\/\/[[:alpha:]]+\.[[:alpha:]]+/' | wc -l) -eq 1 ]; then
	result=$(echo "audio\ngood video (1080p)\nbad video (480p)" | dmenu -r -i -p \
		"Download $1 as:" -l 4 -fn "monospace:size=12" )
	case "$result" in
		'audio')
			dlpath=$(get_path '/home/rg/Music') || exit
			output=$(youtube-dl -f 'bestaudio' -o "${dlpath}/%(title)s.%(ext)s" "$1" 2>&1)
			;;
		'good video (1080p)')
			dlpath=$(get_path '/home/rg/Videos') || exit
			output=$(youtube-dl -f 'bestvideo[height<=1080]+bestaudio/best[height<=1080]' \
				-o "${dlpath}/%(title)s[%(height)sp].%(ext)s" "$1" 2>&1)
			;;
		'bad video (480p)')
			dlpath=$(get_path '/home/rg/Videos') || exit
			output=$(youtube-dl -f 'bestvideo[height<=480]+bestaudio/best[height<=480]' \
				-o "${dlpath}/%(title)s[%(height)dp].%(ext)s" "$1" 2>&1)
			;;
		*) exit ;;
	esac && (
		# Download was successful
		# 1) downloaded item is a playlist
		playlist=$(echo "$output" | tail -n 1 | grep "\[download\] Finished downloading playlist: ")
		if [ $? -eq 0 ]; then
			notif=$(echo "$playlist" | sed "s/\[download\] //")
			notify-send "$summary" 
			exit
		fi

		# 2) downloaded item is a single video and it was already present
		merged=$(echo "$output" | grep "\[download\].*has already been downloaded and merged$")
		if [ $? -eq 0 ]; then
			notif="Requested video is already downloaded."
			notify-send "$summary" "$notif"
			exit
		fi

		# 3) downloaded item is a single video (new)
		notif=$(echo "$output" | grep "\[download\] Destination:" | head -n 1 | sed -r "s/^.*\///g;s/\.f[[:digit:]]+\././g")
		notify-send "$summary" "Finished downloading:\n\'$notif\'"
	) || (
		# Download failed - print error message
		notif=$(echo "$output" | grep "ERROR: " | tail -n 1 | sed "s/^ERROR: //")
		echo "$summary"
		echo "$notif"
		notify-send "$summary" "$notif"
		exit
	)
else
	notify-send "$summary" "Invalid URL."
fi
