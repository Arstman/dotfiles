#!/bin/sh

summary="Youtube-dl"
[ $# -ne 1 ] && echo "Usage: ytdlmenu URL" && exit

if [ $(echo $1 | awk '/^https?:\/\/[[:alpha:]]+\.[[:alpha:]]+/' | wc -l) -eq 1 ]; then
	result=$(echo "audio\ngood video (1080p)\nbad video (480p)" | dmenu -r -i -p \
		"Download $1 as:" -l 4 -fn "monospace:size=12" )
	case "$result" in
		'audio')
			output=$(youtube-dl -f 'bestaudio' -o '~/Music/%(title)s.%(ext)s' "$1" 2>&1)
			;;
		'good video (1080p)')
			output=$(youtube-dl -f 'bestvideo[height<=1080]+bestaudio/best[height<=1080]' \
				-o '~/Videos/%(title)s[%(height)sp].%(ext)s' "$1" 2>&1)
			;;
		'bad video (480p)')
			output=$(youtube-dl -f 'bestvideo[height<=480]+bestaudio/best[height<=480]' \
				-o '~/Videos/%(title)s[%(height)dp].%(ext)s' "$1" 2>&1)
			;;
		*) exit ;;
	esac && (
		# Download was successful
		# 1) downloaded item is a playlist
		playlist=$(echo "$output" | tail -n 1 | grep "\[download\] Finished downloading playlist: ")
		if [ $? -eq 0 ]; then
			notif=$(echo "$playlist" | sed "s/\[download\] //")
			notify-send "$summary" "$notif"
			exit
		fi

		# 2) downloaded item is a single video and it was already present
		merged=$(echo "$output" | grep "\[download\].*has already been downloaded and merged$")
		if [ $? -eq 0 ]; then
			notif="Requested video is already downloaded."
			notify-send "$summary" "$notif"
			exit
		fi

		# 3) downloaded item is a single video (new)
		notif=$(echo "$output" | grep "\[download\] Destination:" | head -n 1 | sed -r "s/^.*\///g;s/\.f[[:digit:]]+\././g")
		notify-send "$summary" "Finished downloading:\n\'$notif\'"
	) || (
		# Download failed - print error message
		notif=$(echo "$output" | grep "ERROR: " | tail -n 1 | sed "s/^ERROR: //")
		echo "$summary"
		echo "$notif"
		notify-send "$summary" "$notif"
		exit
	)
else
	notify-send "$summary" "Invalid URL."
fi
